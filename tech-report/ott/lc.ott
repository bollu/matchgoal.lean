% minimal
metavar termvar, x ::=  
  {{ tex \mathit{[[termvar]]} }}


% indexing variables, like a_i
indexvar index, i, j, n, m ::= {{ isa num }} {{ coq nat }} {{ hol num }} 

grammar
t :: 't_' ::=       {{ com term    }}             
  | x            ::  :: Var {{ com variable }}
  | \ x . t      ::  :: Lam {{ com lambda }}
  | t t'         ::  :: App  {{ com application }}
  | ( t )        :: S:: Paren 
  | { t / x } t' :: M:: Tsub  

terminals :: 'terminals_' ::=
  | \            ::  :: lambda  {{ tex \lambda }}
  | -->          ::  :: red     {{ tex \longrightarrow }}

v :: 'v_' ::=              
  | \ x . t      ::  :: Lam 

subrules
  v <:: t

defns
  Jop :: '' ::=

 defn
 t1 --> t2 :: ::reduce::''  {{ com $[[t1]]$ reduces to $[[t2]]$}} by


    --------------------------  :: ax_app
    (\x.t12) v2 -->  {v2/x}t12

    t1 --> t1'
    -------------- :: ctx_app_fun
    t1 t --> t1' t

    t1 --> t1'
    -------------- :: ctx_app_arg
    v t1 --> v t1'
